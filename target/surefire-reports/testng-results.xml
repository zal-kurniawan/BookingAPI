<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="13" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-22T19:54:39 WIB" name="Annotation Execution Suite" finished-at="2025-09-22T19:55:00 WIB" duration-ms="20152">
    <groups>
    </groups>
    <test started-at="2025-09-22T19:54:39 WIB" name="Booking API Test" finished-at="2025-09-22T19:55:00 WIB" duration-ms="20152">
      <class name="testCase.happyFlow">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:37 WIB" name="beforeSuite" finished-at="2025-09-22T19:54:39 WIB" duration-ms="2392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:39 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:39 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method signature="createBooking()[pri:1, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:39 WIB" name="createBooking" finished-at="2025-09-22T19:54:42 WIB" duration-ms="2216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBooking -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:42 WIB" name="afterMethod" finished-at="2025-09-22T19:54:42 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:42 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:42 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method signature="assertBookingAfterCreate()[pri:2, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:42 WIB" name="assertBookingAfterCreate" finished-at="2025-09-22T19:54:43 WIB" depends-on-methods="testCase.happyFlow.createBooking" duration-ms="1277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertBookingAfterCreate -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:43 WIB" name="afterMethod" finished-at="2025-09-22T19:54:43 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="updateBooking()[pri:3, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:43 WIB" name="updateBooking" finished-at="2025-09-22T19:54:45 WIB" depends-on-methods="testCase.happyFlow.createBooking" duration-ms="2245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBooking -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:43 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:43 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:45 WIB" name="afterMethod" finished-at="2025-09-22T19:54:45 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:45 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:45 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method signature="assertBookingAfterUpdate()[pri:4, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:45 WIB" name="assertBookingAfterUpdate" finished-at="2025-09-22T19:54:47 WIB" depends-on-methods="testCase.happyFlow.updateBooking" duration-ms="1282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertBookingAfterUpdate -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:47 WIB" name="afterMethod" finished-at="2025-09-22T19:54:47 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:47 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:47 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method signature="updatePartialBooking()[pri:5, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:47 WIB" name="updatePartialBooking" finished-at="2025-09-22T19:54:48 WIB" depends-on-methods="testCase.happyFlow.updateBooking" duration-ms="1449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePartialBooking -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:48 WIB" name="afterMethod" finished-at="2025-09-22T19:54:48 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:48 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:48 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method signature="assertBookingAfterPartialUpdate()[pri:6, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:48 WIB" name="assertBookingAfterPartialUpdate" finished-at="2025-09-22T19:54:49 WIB" depends-on-methods="testCase.happyFlow.updatePartialBooking" duration-ms="1336" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertBookingAfterPartialUpdate -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:49 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:49 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:49 WIB" name="afterMethod" finished-at="2025-09-22T19:54:49 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="deleteBooking()[pri:7, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:49 WIB" name="deleteBooking" finished-at="2025-09-22T19:54:51 WIB" depends-on-methods="testCase.happyFlow.updatePartialBooking" duration-ms="1486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBooking -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:51 WIB" name="afterMethod" finished-at="2025-09-22T19:54:51 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:51 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:51 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method signature="assertBookingAfterDelete()[pri:8, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:51 WIB" name="assertBookingAfterDelete" finished-at="2025-09-22T19:54:52 WIB" depends-on-methods="testCase.happyFlow.deleteBooking" duration-ms="1295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertBookingAfterDelete -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.happyFlow@6a01e23]" started-at="2025-09-22T19:54:52 WIB" name="afterMethod" finished-at="2025-09-22T19:54:52 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCase.happyFlow -->
      <class name="testCase.negativeFlow">
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:52 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:52 WIB" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method signature="authWithInvalidCredentials()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:52 WIB" name="authWithInvalidCredentials" finished-at="2025-09-22T19:54:53 WIB" duration-ms="1315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authWithInvalidCredentials -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:53 WIB" name="afterMethod" finished-at="2025-09-22T19:54:53 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:53 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:53 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method signature="bookingIdDoesNotExist()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:53 WIB" name="bookingIdDoesNotExist" finished-at="2025-09-22T19:54:56 WIB" duration-ms="2252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingIdDoesNotExist -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:56 WIB" name="afterMethod" finished-at="2025-09-22T19:54:56 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:56 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:56 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method signature="createBookingWithInvalidData()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:56 WIB" name="createBookingWithInvalidData" finished-at="2025-09-22T19:54:57 WIB" duration-ms="1302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingWithInvalidData -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:57 WIB" name="afterMethod" finished-at="2025-09-22T19:54:57 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:57 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:57 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method signature="updateBookingWithInvalidAuth()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:57 WIB" name="updateBookingWithInvalidAuth" finished-at="2025-09-22T19:54:58 WIB" duration-ms="1393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBookingWithInvalidAuth -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:58 WIB" name="afterMethod" finished-at="2025-09-22T19:54:58 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupRequestSpecification()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:58 WIB" name="setupRequestSpecification" finished-at="2025-09-22T19:54:58 WIB" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRequestSpecification -->
        <test-method signature="updateBookingWithoutAuth()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:54:58 WIB" name="updateBookingWithoutAuth" finished-at="2025-09-22T19:55:00 WIB" duration-ms="1249" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBookingWithoutAuth -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testCase.negativeFlow@f8c1ddd]" started-at="2025-09-22T19:55:00 WIB" name="afterMethod" finished-at="2025-09-22T19:55:00 WIB" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCase.negativeFlow -->
    </test> <!-- Booking API Test -->
  </suite> <!-- Annotation Execution Suite -->
</testng-results>
