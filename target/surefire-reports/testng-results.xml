<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="11" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-16T13:38:58 WIB" name="Annotation Execution Suite" finished-at="2025-09-16T13:39:15 WIB" duration-ms="17536">
    <groups>
    </groups>
    <test started-at="2025-09-16T13:38:58 WIB" name="Booking API Test" finished-at="2025-09-16T13:39:15 WIB" duration-ms="17536">
      <class name="happyFlow">
        <test-method is-config="true" signature="setup()[pri:0, instance:happyFlow@2cbb3d47]" started-at="2025-09-16T13:38:58 WIB" name="setup" finished-at="2025-09-16T13:39:00 WIB" duration-ms="2177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createBooking()[pri:1, instance:happyFlow@2cbb3d47]" started-at="2025-09-16T13:39:00 WIB" name="createBooking" finished-at="2025-09-16T13:39:01 WIB" duration-ms="1418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBooking -->
        <test-method signature="assertBookingAfterCreate()[pri:2, instance:happyFlow@2cbb3d47]" started-at="2025-09-16T13:39:01 WIB" name="assertBookingAfterCreate" finished-at="2025-09-16T13:39:03 WIB" depends-on-methods="happyFlow.createBooking" duration-ms="1331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertBookingAfterCreate -->
        <test-method signature="updateBooking()[pri:3, instance:happyFlow@2cbb3d47]" started-at="2025-09-16T13:39:03 WIB" name="updateBooking" finished-at="2025-09-16T13:39:04 WIB" depends-on-methods="happyFlow.createBooking" duration-ms="1209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBooking -->
        <test-method signature="assertBookingAfterUpdate()[pri:4, instance:happyFlow@2cbb3d47]" started-at="2025-09-16T13:39:04 WIB" name="assertBookingAfterUpdate" finished-at="2025-09-16T13:39:05 WIB" depends-on-methods="happyFlow.updateBooking" duration-ms="1270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertBookingAfterUpdate -->
        <test-method signature="deleteBooking()[pri:5, instance:happyFlow@2cbb3d47]" started-at="2025-09-16T13:39:05 WIB" name="deleteBooking" finished-at="2025-09-16T13:39:06 WIB" depends-on-methods="happyFlow.createBooking" duration-ms="1283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBooking -->
        <test-method signature="assertBookingAfterDelete()[pri:6, instance:happyFlow@2cbb3d47]" started-at="2025-09-16T13:39:06 WIB" name="assertBookingAfterDelete" finished-at="2025-09-16T13:39:08 WIB" depends-on-methods="happyFlow.deleteBooking" duration-ms="1235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertBookingAfterDelete -->
      </class> <!-- happyFlow -->
      <class name="negativeFlow">
        <test-method signature="authWithInvalidCredentials()[pri:0, instance:negativeFlow@2aa3cd93]" started-at="2025-09-16T13:39:08 WIB" name="authWithInvalidCredentials" finished-at="2025-09-16T13:39:09 WIB" duration-ms="1426" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authWithInvalidCredentials -->
        <test-method signature="bookingIdDoesNotExist()[pri:0, instance:negativeFlow@2aa3cd93]" started-at="2025-09-16T13:39:09 WIB" name="bookingIdDoesNotExist" finished-at="2025-09-16T13:39:11 WIB" duration-ms="1912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingIdDoesNotExist -->
        <test-method signature="createBookingWithInvalidData()[pri:0, instance:negativeFlow@2aa3cd93]" started-at="2025-09-16T13:39:11 WIB" name="createBookingWithInvalidData" finished-at="2025-09-16T13:39:12 WIB" duration-ms="1408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingWithInvalidData -->
        <test-method signature="updateBookingWithInvalidAuth()[pri:0, instance:negativeFlow@2aa3cd93]" started-at="2025-09-16T13:39:12 WIB" name="updateBookingWithInvalidAuth" finished-at="2025-09-16T13:39:14 WIB" duration-ms="1447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBookingWithInvalidAuth -->
        <test-method signature="updateBookingWithoutAuth()[pri:0, instance:negativeFlow@2aa3cd93]" started-at="2025-09-16T13:39:14 WIB" name="updateBookingWithoutAuth" finished-at="2025-09-16T13:39:15 WIB" duration-ms="1395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBookingWithoutAuth -->
      </class> <!-- negativeFlow -->
    </test> <!-- Booking API Test -->
  </suite> <!-- Annotation Execution Suite -->
</testng-results>
