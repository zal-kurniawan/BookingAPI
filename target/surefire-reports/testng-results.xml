<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="13" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-16T20:03:13 WIB" name="Annotation Execution Suite" finished-at="2025-09-16T20:03:31 WIB" duration-ms="18656">
    <groups>
    </groups>
    <test started-at="2025-09-16T20:03:13 WIB" name="Booking API Test" finished-at="2025-09-16T20:03:31 WIB" duration-ms="18656">
      <class name="happyFlow">
        <test-method is-config="true" signature="setup()[pri:0, instance:happyFlow@1198b989]" started-at="2025-09-16T20:03:13 WIB" name="setup" finished-at="2025-09-16T20:03:15 WIB" duration-ms="2481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="createBooking()[pri:1, instance:happyFlow@1198b989]" started-at="2025-09-16T20:03:15 WIB" name="createBooking" finished-at="2025-09-16T20:03:16 WIB" duration-ms="1272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBooking -->
        <test-method signature="assertBookingAfterCreate()[pri:2, instance:happyFlow@1198b989]" started-at="2025-09-16T20:03:16 WIB" name="assertBookingAfterCreate" finished-at="2025-09-16T20:03:18 WIB" depends-on-methods="happyFlow.createBooking" duration-ms="1283" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertBookingAfterCreate -->
        <test-method signature="updateBooking()[pri:3, instance:happyFlow@1198b989]" started-at="2025-09-16T20:03:18 WIB" name="updateBooking" finished-at="2025-09-16T20:03:19 WIB" depends-on-methods="happyFlow.createBooking" duration-ms="1229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBooking -->
        <test-method signature="assertBookingAfterUpdate()[pri:4, instance:happyFlow@1198b989]" started-at="2025-09-16T20:03:19 WIB" name="assertBookingAfterUpdate" finished-at="2025-09-16T20:03:20 WIB" depends-on-methods="happyFlow.updateBooking" duration-ms="1265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertBookingAfterUpdate -->
        <test-method signature="updatePartialBooking()[pri:5, instance:happyFlow@1198b989]" started-at="2025-09-16T20:03:20 WIB" name="updatePartialBooking" finished-at="2025-09-16T20:03:21 WIB" depends-on-methods="happyFlow.updateBooking" duration-ms="1230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePartialBooking -->
        <test-method signature="assertBookingAfterPartialUpdate()[pri:6, instance:happyFlow@1198b989]" started-at="2025-09-16T20:03:21 WIB" name="assertBookingAfterPartialUpdate" finished-at="2025-09-16T20:03:23 WIB" depends-on-methods="happyFlow.updatePartialBooking" duration-ms="1251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertBookingAfterPartialUpdate -->
        <test-method signature="deleteBooking()[pri:7, instance:happyFlow@1198b989]" started-at="2025-09-16T20:03:23 WIB" name="deleteBooking" finished-at="2025-09-16T20:03:24 WIB" depends-on-methods="happyFlow.updatePartialBooking" duration-ms="1222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteBooking -->
        <test-method signature="assertBookingAfterDelete()[pri:8, instance:happyFlow@1198b989]" started-at="2025-09-16T20:03:24 WIB" name="assertBookingAfterDelete" finished-at="2025-09-16T20:03:25 WIB" depends-on-methods="happyFlow.deleteBooking" duration-ms="1224" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assertBookingAfterDelete -->
      </class> <!-- happyFlow -->
      <class name="negativeFlow">
        <test-method signature="authWithInvalidCredentials()[pri:0, instance:negativeFlow@4b44655e]" started-at="2025-09-16T20:03:25 WIB" name="authWithInvalidCredentials" finished-at="2025-09-16T20:03:26 WIB" duration-ms="1252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- authWithInvalidCredentials -->
        <test-method signature="bookingIdDoesNotExist()[pri:0, instance:negativeFlow@4b44655e]" started-at="2025-09-16T20:03:26 WIB" name="bookingIdDoesNotExist" finished-at="2025-09-16T20:03:28 WIB" duration-ms="1205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookingIdDoesNotExist -->
        <test-method signature="createBookingWithInvalidData()[pri:0, instance:negativeFlow@4b44655e]" started-at="2025-09-16T20:03:28 WIB" name="createBookingWithInvalidData" finished-at="2025-09-16T20:03:29 WIB" duration-ms="1230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingWithInvalidData -->
        <test-method signature="updateBookingWithInvalidAuth()[pri:0, instance:negativeFlow@4b44655e]" started-at="2025-09-16T20:03:29 WIB" name="updateBookingWithInvalidAuth" finished-at="2025-09-16T20:03:30 WIB" duration-ms="1215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBookingWithInvalidAuth -->
        <test-method signature="updateBookingWithoutAuth()[pri:0, instance:negativeFlow@4b44655e]" started-at="2025-09-16T20:03:30 WIB" name="updateBookingWithoutAuth" finished-at="2025-09-16T20:03:31 WIB" duration-ms="1260" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateBookingWithoutAuth -->
      </class> <!-- negativeFlow -->
    </test> <!-- Booking API Test -->
  </suite> <!-- Annotation Execution Suite -->
</testng-results>
